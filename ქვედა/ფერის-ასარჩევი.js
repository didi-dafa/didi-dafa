var ფერის_ასარჩევი = function(ელემენტი, საწყისი_ფერი, უკუძახილი){
    var გაჟღენთა = function(ფერი,სიგანე,სიმაღლე){
        var ნახაზი = document.createElement('canvas'),
                კონტ = ნახაზი.getContext('2d')
        
        ნახაზი.width=სიგანე
        ნახაზი.height=სიმაღლე
        
        return {
            ფერი:ფერი,
            ნახაზი:ნახაზი,
            მიე_ფერი:function(ფერი){
                this.ფერი=ფერი
                
                console.log('აქ გაჟღენთა უნდა შეიცვალოს')
            },
        }
    }(საწყისი_ფერი, 20, 50)
    var ნახაზი = document.createElement('canvas'),
            კონტ = ნახაზი.getContext('2d'),
            არჩეული = document.createElement('div')
          
    გაჟღენთა.id='ფერის_ასარჩევი_გაჟღენთა'
    ნახაზი.id='ფერის_ასარჩევი_ნახაზი'
    
    ნახაზი.width=120;
    ნახაზი.height=50;
    
    არჩეული.id='ფერის_ასარჩევი_არჩეული'
        
    var მონაცემები = კონტ.createImageData(ნახაზი.width, ნახაზი.height)
    
    for(var ი=0;ი<ნახაზი.width;ი++){
        for(var კ=0;კ<ნახაზი.height;კ++){
            var მის = (ი+კ*მონაცემები.width)*4,
                სიგანის_პროცენტი=ი/მონაცემები.width
        
            var მეექვსედი = Math.floor(სიგანის_პროცენტი/(1/6)),
                    მეექვსედში_პროცენტი = (სიგანის_პროცენტი%(1/6))/(1/6),
                    წითლის_შერევა, მწვანეს_შერევა, ლურჯის_შერევა
            
            switch(მეექვსედი){
                case 0:
                    წითლის_შერევა=1
                    მწვანეს_შერევა=მეექვსედში_პროცენტი
                    ლურჯის_შერევა=0
                    break
                case 1:
                    წითლის_შერევა=1-მეექვსედში_პროცენტი
                    მწვანეს_შერევა=1
                    ლურჯის_შერევა=0
                    break
                case 2:
                    წითლის_შერევა=0
                    მწვანეს_შერევა=1
                    ლურჯის_შერევა=მეექვსედში_პროცენტი
                    break
                case 3:
                    წითლის_შერევა=0
                    მწვანეს_შერევა=1-მეექვსედში_პროცენტი
                    ლურჯის_შერევა=1
                    break
                case 4:
                    წითლის_შერევა=მეექვსედში_პროცენტი
                    მწვანეს_შერევა=0
                    ლურჯის_შერევა=1
                    break
                case 5:
                    წითლის_შერევა=1
                    მწვანეს_შერევა=0
                    ლურჯის_შერევა=1-მეექვსედში_პროცენტი
                    break
            }
            
            var ნახევარ_სიმაღლის_პროცენტი=
                    (კ%(მონაცემები.height/2))/(მონაცემები.height/2),
                წითელი=255*წითლის_შერევა, 
                მწვანე=255*მწვანეს_შერევა, 
                ლურჯი=255*ლურჯის_შერევა
            
            if(კ<მონაცემები.height/2){
                წითელი+=(255-წითელი)*(1-ნახევარ_სიმაღლის_პროცენტი)
                მწვანე+=(255-მწვანე)*(1-ნახევარ_სიმაღლის_პროცენტი)
                ლურჯი+=(255-ლურჯი)*(1-ნახევარ_სიმაღლის_პროცენტი)
            }else{
                წითელი*=1-ნახევარ_სიმაღლის_პროცენტი
                მწვანე*=1-ნახევარ_სიმაღლის_პროცენტი
                ლურჯი*=1-ნახევარ_სიმაღლის_პროცენტი
            }
            
            წითელი=Math.floor(წითელი)
            მწვანე=Math.floor(მწვანე)
            ლურჯი=Math.floor(ლურჯი)
        
            მონაცემები.data[მის]=წითელი
            მონაცემები.data[მის+1]=მწვანე
            მონაცემები.data[მის+2]=ლურჯი
            მონაცემები.data[მის+3]=255
            
            
        }
    }

    გადახატე_ნახაზი()
    
    var საწყისი_ფერ = ფერიდან_რიცხვები(საწყისი_ფერი),
        საწყისის_მისამართი = ფერიდან_კოორდინატები(
            საწყისი_ფერ.წითელი,საწყისი_ფერ.მწვანე, საწყისი_ფერ.ლურჯი)
    გადახატე_მიმთითებელი(საწყისის_მისამართი.ხ, საწყისის_მისამართი.ჯ)
    
    var დაჭერილი = false,
            ბოლო_ხ, ბოლო_ჯ
    ნახაზი.addEventListener('mousedown', function(მოვლ){
        var აბს = აბსოლუტური_მისამართი(ნახაზი)
        if(მოვლ.button===0){
            დაჭერილი=true
            გადახატე_ნახაზი()
            გადახატე_მიმთითებელი(მოვლ.pageX-აბს.ხ, მოვლ.pageY-აბს.ჯ)
        }
    })
    
    ნახაზი.addEventListener('mouseup', function(მოვლ){
        if(მოვლ.button===0){
            დაჭერილი=false
            გაჟღენთა.მიე_ფერი(ბოლო_ფერი())
            უკუძახილი(ბოლო_ფერი())
        }
    })
    
    window.addEventListener('mouseup', function(მოვლ){
        if(მოვლ.button===0&&დაჭერილი){
            დაჭერილი=false
            გაჟღენთა.მიე_ფერი(ბოლო_ფერი())
            უკუძახილი(ბოლო_ფერი())
        }
    })
    
    window.addEventListener('mouseleave', function(მოვლ){
        if(მოვლ.button===0){
            დაჭერილი=false
        }
    })
    
    window.addEventListener('mousemove', function(მოვლ){
        var აბს = აბსოლუტური_მისამართი(ნახაზი)
        if(მოვლ.button===0&&დაჭერილი){
            გადახატე_ნახაზი()
            გადახატე_მიმთითებელი(მოვლ.pageX-აბს.ხ, მოვლ.pageY-აბს.ჯ)
        }
    })
    
    function ბოლო_ფერი(){
        var მისამართი = (ბოლო_ხ+მონაცემები.width*(ბოლო_ჯ))*4
            წითელი = მონაცემები.data[მისამართი],
            მწვანე = მონაცემები.data[მისამართი+1],
            ლურჯი = მონაცემები.data[მისამართი+2]
    
        return რიცხვებიდან_ფერი(წითელი, მწვანე, ლურჯი)
    }
    
    ელემენტი.appendChild(არჩეული)
    ელემენტი.appendChild(გაჟღენთა.ნახაზი)
    ელემენტი.appendChild(ნახაზი)
    
    function გადახატე_ნახაზი(){
        კონტ.putImageData(მონაცემები, 0, 0)
    }
    function გადახატე_მიმთითებელი(ხ, ჯ){
        if(ხ<0)ხ=0
        if(ხ>=ნახაზი.width)ხ=ნახაზი.width-1
        if(ჯ<0)ჯ=0
        if(ჯ>=ნახაზი.height)ჯ=ნახაზი.height-1
        ბოლო_ხ=ხ
        ბოლო_ჯ=ჯ
        
        კონტ.beginPath()
        კონტ.strokeStyle='rgb(0,0,0,0.5)'
        
        კონტ.moveTo(ხ,0)
        კონტ.lineTo(ხ,ნახაზი.height)
        კონტ.stroke()
        
        კონტ.moveTo(0,ჯ)
        კონტ.lineTo(ნახაზი.width,ჯ)
        კონტ.stroke()
        
        არჩეული.style.backgroundColor=ბოლო_ფერი()
    }
    function ფერიდან_რიცხვები(ფერი){
        var მთხვ = ფერი.match(/rgb\((\d*),(\d*),(\d*)\)/)
        if(!მთხვ){
            return {წითელი:0, მწვანე:0, ლურჯი:0}
        }
        return {წითელი:+მთხვ[1], მწვანე:+მთხვ[2], ლურჯი:+მთხვ[3]}
    }
    function რიცხვებიდან_ფერი(წითელი, მწვანე, ლურჯი){
        return 'rgb('+წითელი+','+მწვანე+','+ლურჯი+')'
    }
    
    function აბსოლუტური_მისამართი(ელემენტი){
        var ხ = 0,
            ჯ = 0,
            სამუშაო=ელემენტი
    
        while(სამუშაო.offsetParent){
            ხ+=სამუშაო.offsetLeft
            ჯ+=სამუშაო.offsetTop
            სამუშაო=სამუშაო.offsetParent
        }
        
        ხ+=სამუშაო.offsetLeft
        ჯ+=სამუშაო.offsetTop
        
	return {ხ:ხ,ჯ:ჯ};
    }
    
    function ფერიდან_კოორდინატები(წითელი, მწვანე, ლურჯი){
        var ახლო_ფერი = {
                მისამართი:{ხ:0,ჯ:0},
                დაშორება:{წითელი:255, 
                    მწვანე:255, 
                    ლურჯი:255}
            }
        
        for(var ი=0;ი<ნახაზი.width;ი++){
            for(var კ=0;კ<ნახაზი.height;კ++){
                var მის = (ი+კ*მონაცემები.width)*4
                
                var წ=მონაცემები.data[მის],
                    მ=მონაცემები.data[მის+1],
                    ლ=მონაცემები.data[მის+2]
                var დაშორება={
                        წითელი:Math.abs(წ-წითელი),
                        მწვანე:Math.abs(მ-მწვანე),
                        ლურჯი:Math.abs(ლ-ლურჯი),
                    }
                    
                if(დაშორება.წითელი<=ახლო_ფერი.დაშორება.წითელი&&
                            დაშორება.მწვანე<=ახლო_ფერი.დაშორება.მწვანე&&
                            დაშორება.ლურჯი<=ახლო_ფერი.დაშორება.ლურჯი){
                    ახლო_ფერი={
                        მისამართი:{ხ:ი,ჯ:კ}, 
                        დაშორება:{წითელი:დაშორება.წითელი, 
                            მწვანე:დაშორება.მწვანე, 
                            ლურჯი:დაშორება.ლურჯი}
                    }
                }
            }
        }
        return ახლო_ფერი.მისამართი
    }
    
    return {
        მიე_ფერი:function(წითელი, მწვანე, ლურჯი, ინიციატორი){
            var მისამართი = ფერიდან_კოორდინატები(წითელი, მწვანე, ლურჯი)
            
            გადახატე_ნახაზი()
            გადახატე_მიმთითებელი(მისამართი.ხ, მისამართი.ჯ)
            უკუძახილი(რიცხვებიდან_ფერი(წითელი, მწვანე, ლურჯი), ინიციატორი)
        },
        მიე_ფერი_ტექსტურად:function(ფერი, ინიციატორი){
            var რიცხვები = ფერიდან_რიცხვები(ფერი)
            this.მიე_ფერი(რიცხვები.წითელი, რიცხვები.მწვანე, რიცხვები.ლურჯი,
                ინიციატორი)
        }
    }
}